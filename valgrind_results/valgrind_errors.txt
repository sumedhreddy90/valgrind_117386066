-----Error 1-----

==7442== Memcheck, a memory error detector
==7442== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7442== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==7442== Command: ./shell-app
==7442== 
Averaged sensor reading: 10
==7442== Conditional jump or move depends on uninitialised value(s)
==7442==    at 0x10A240: main (main.cpp:8)
==7442== 
==7442== 
==7442== HEAP SUMMARY:
==7442==     in use at exit: 44 bytes in 2 blocks
==7442==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==7442== 
==7442== LEAK SUMMARY:
==7442==    definitely lost: 24 bytes in 1 blocks
==7442==    indirectly lost: 20 bytes in 1 blocks
==7442==      possibly lost: 0 bytes in 0 blocks
==7442==    still reachable: 0 bytes in 0 blocks
==7442==         suppressed: 0 bytes in 0 blocks
==7442== Rerun with --leak-check=full to see details of leaked memory
==7442== 
==7442== Use --track-origins=yes to see where uninitialised values come from
==7442== For lists of detected and suppressed errors, rerun with: -s
==7442== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


----Error 2----

sumedh@SUMEDH:~/valgrind/cpp-boilerplate/build/app$ valgrind --leak-check=full ./shell-app
==8203== Memcheck, a memory error detector
==8203== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8203== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==8203== Command: ./shell-app
==8203== 
Averaged sensor reading: 10
==8203== Conditional jump or move depends on uninitialised value(s)
==8203==    at 0x10A240: main (main.cpp:8)
==8203== 
==8203== 
==8203== HEAP SUMMARY:
==8203==     in use at exit: 44 bytes in 2 blocks
==8203==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==8203== 
==8203== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==8203==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==8203==    by 0x10A3C3: AnalogSensor::Read() (AnalogSensor.cpp:16)
==8203==    by 0x10A217: main (main.cpp:6)
==8203== 
==8203== LEAK SUMMARY:
==8203==    definitely lost: 24 bytes in 1 blocks
==8203==    indirectly lost: 20 bytes in 1 blocks
==8203==      possibly lost: 0 bytes in 0 blocks
==8203==    still reachable: 0 bytes in 0 blocks
==8203==         suppressed: 0 bytes in 0 blocks
==8203== 
==8203== Use --track-origins=yes to see where uninitialised values come from
==8203== For lists of detected and suppressed errors, rerun with: -s
==8203== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

